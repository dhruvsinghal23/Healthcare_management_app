<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>global.BillingUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>BillingUtils</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var BillingUtils = Class.create();
BillingUtils.prototype = {
    initialize: function() {},

    calculateTotalBilling: function(billingSysId) {
        var gr = new GlideRecord('u_billing');
        if(gr.get(billingSysId)){
			var total = gr.getDisplayValue('u_total_amount');
			return total;
		}
		return false;
    },

    isOverdue: function(billingSysId) {
        var gr = new GlideRecord('u_billing');
        if (gr.get(billingSysId)) {
            var dueDate = gr.u_due_date;
            var paid = gr.u_status == 'Paid';
            return dueDate && dueDate < new GlideDate() && !paid;
        }
        return false;
    },

    fetchById: function(billingSysId) {
        var gr = new GlideRecord('u_billing');
        if (gr.get(billingSysId)) {
            return {
                sys_id: gr.getUniqueValue(),
                patient: gr.u_patient_id.getDisplayValue(),
                amount: gr.u_total_amount + '',
                status: gr.u_status + ''
            };
        }
        return null;
    },

    fetchByPatient: function(patientSysId) {
        var result = [];
        var gr = new GlideRecord('u_billing');
        gr.addQuery('u_patient_id', patientSysId);
        gr.query();
        while (gr.next()) {
            result.push({
                sys_id: gr.getUniqueValue(),
                amount: gr.u_total_amount + '',
                status: gr.u_payment_status + '',
                billing_date: gr.u_billing_date ? gr.u_billing_date.getDisplayValue() : '',
                due_date: gr.u_due_date ? gr.u_due_date.getDisplayValue() : ''
            });
        }
        return result;
    },

    type: 'BillingUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-26 16:37:21</sys_created_on>
        <sys_id>6f3ea8209383221019e5f6027cba10b9</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>BillingUtils</sys_name>
        <sys_package display_value="Healthcare Management " source="eb49735f471222104bebe454116d43bf">eb49735f471222104bebe454116d43bf</sys_package>
        <sys_policy/>
        <sys_scope display_value="Healthcare Management ">eb49735f471222104bebe454116d43bf</sys_scope>
        <sys_update_name>sys_script_include_6f3ea8209383221019e5f6027cba10b9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-26 16:44:21</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>6f3ea8209383221019e5f6027cba10b9</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-26 16:38:08</sys_created_on>
        <sys_id>836ea0ec9343221019e5f6027cba1014</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-26 16:38:08</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
