<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>global.LabTestUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>LabTestUtils</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var LabTestUtils = Class.create();
LabTestUtils.prototype = {
    initialize: function() {},

    fetchResultById: function(testSysId) {
        var gr = new GlideRecord('u_lab_test');
		gr.addQuery('u_patient_id.u_number',testSysId);
		gr.query();
        if (gr.next()) {
            return gr.u_test_results + '';
        }
        return 'Result not found';
    },

    isResultReady: function(testSysId) {
        var gr = new GlideRecord('u_lab_test');
        if (gr.get(testSysId)) {
            return gr.u_status == 'Completed' || gr.u_test_results != '';
        }
        return false;
    },

    fetchByPatient: function(patientSysId) {
        var result = [];
        var gr = new GlideRecord('u_lab_test');
        gr.addQuery('u_patient_id', patientSysId);
        gr.query();
        while (gr.next()) {
            result.push({
                sys_id: gr.getUniqueValue(),
                test_type: gr.u_test_type + '',
                date: gr.u_scheduled_date ? gr.u_scheduled_date.getDisplayValue() : '',
                status: gr.u_status + '',
                result: gr.u_test_results + ''
            });
        }
        return result;
    },

    fetchByDate: function(dateString) {
        var result = [];
        var gr = new GlideRecord('u_lab_test');
        gr.addQuery('u_scheduled_date', 'STARTSWITH', dateString); // 'YYYY-MM-DD'
        gr.query();
        while (gr.next()) {
            result.push({
                sys_id: gr.getUniqueValue(),
                patient: gr.u_patient_id.getDisplayValue(),
                test_type: gr.u_test_type + '',
                result: gr.u_test_results + '',
                status: gr.u_status + ''
            });
        }
        return result;
    },

    type: 'LabTestUtils'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-08 18:32:57</sys_created_on>
        <sys_id>dceb183a47ae22104bebe454116d439e</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>LabTestUtils</sys_name>
        <sys_package display_value="Healthcare Management " source="eb49735f471222104bebe454116d43bf">eb49735f471222104bebe454116d43bf</sys_package>
        <sys_policy/>
        <sys_scope display_value="Healthcare Management ">eb49735f471222104bebe454116d43bf</sys_scope>
        <sys_update_name>sys_script_include_dceb183a47ae22104bebe454116d439e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-26 19:28:08</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>dceb183a47ae22104bebe454116d439e</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-08 18:32:57</sys_created_on>
        <sys_id>911cd4b647ae22104bebe454116d43c8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-08 18:32:57</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
